{"version":3,"sources":["webpack:///./src/components/Layout/styled.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Post/styled.js","webpack:///./src/templates/blog-post.js"],"names":["LayoutWrapper","styled","section","LayoutMain","main","Layout","children","Header","Profile","SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","PostHeader","header","PostTitle","h1","PostDescription","h2","PostContent","BlogPost","post","data","markdownRemark","frontmatter","date","timeToRead","dangerouslySetInnerHTML","__html","html"],"mappings":"oKAEaA,EAAgBC,IAAOC,QAAV,2EAAGD,CAAH,oJAUbE,EAAaF,IAAOG,KAAV,wEAAGH,CAAH,kCCYRI,IAfA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,KAAeF,M,sGCHrB,SAASG,EAAT,GAAkD,IAAD,IAAlCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,kBAACM,EAAA,EAAD,CACEC,eAAgB,CACdT,QAEFE,MAAOA,EACPQ,cAAeH,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACEU,KAAK,cACLC,QAASP,GAEX,CACEQ,SAAS,WACTD,QAASV,GAEX,CACEW,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAT,EAAKG,oBAAL,eAAmBQ,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAASV,GAEX,CACES,KAAK,sBACLC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,Q,YCtFFmB,EAAa3B,IAAO4B,OAAV,yEAAG5B,CAAH,oDAMV6B,EAAY7B,IAAO8B,GAAV,wEAAG9B,CAAH,4FAOT+B,EAAkB/B,IAAOgC,GAAV,8EAAGhC,CAAH,qCAKfiC,EAAcjC,IAAOC,QAAV,0EAAGD,CAAH,2ECiBTkC,UA9BE,SAAC,GAAc,IACxBC,EADuB,EAAXC,KACAC,eAElB,OACE,kBAACjC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAKQ,MAAOuB,EAAKG,YAAY1B,QAC7B,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAcuB,EAAKG,YAAY1B,OAC/B,kBAAC,EAAD,KAAuBuB,EAAKG,YAAYC,KAAxC,MAAkDJ,EAAKK,WAAvD,cAEF,kBAAC,EAAD,KACE,yBAAKC,wBAAyB,CAAEC,OAAQP,EAAKQ","file":"component---src-templates-blog-post-js-06d1d5d3a5d093693af1.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const LayoutWrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: 'Merriweather','Georgia',serif;\r\n  margin: 0 auto;\r\n  max-width: 42rem;\r\n  padding: 2.5rem 1.25rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport const LayoutMain = styled.main`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport GlobalStyles from '../../styles/global'\r\nimport Profile from '../Profile';\r\nimport Header from '../Header';\r\n\r\nimport * as S from './styled';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <S.LayoutWrapper>\r\n      <GlobalStyles />\r\n      <Header />\r\n      <Profile />\r\n      <S.LayoutMain>{children}</S.LayoutMain>\r\n    </S.LayoutWrapper>\r\n  )\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.author || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import styled from 'styled-components'\r\n\r\nexport const PostHeader = styled.header`\r\n  color: #4AB2EE;\r\n  margin-top: 1rem;\r\n  max-width: 42rem;\r\n`\r\n\r\nexport const PostTitle = styled.h1`\r\n  font-family: Montserrat,sans-serif;\r\n  font-size: 2.5rem;\r\n  font-weight: 700;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nexport const PostDescription = styled.h2`\r\n  font-size: 1rem;\r\n  font-weight: 200;\r\n`\r\n\r\nexport const PostContent = styled.section`\r\n  max-width: 42rem;\r\n  padding: 2rem 0;\r\n  p {\r\n    line-height: 1.5;\r\n    margin-bottom: 1rem;\r\n  }\r\n`","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/Layout'\r\nimport SEO from '../components/SEO'\r\nimport * as S from '../components/Post/styled'\r\n\r\nconst BlogPost = ({ data }) => {\r\n  const post = data.markdownRemark\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={post.frontmatter.title} />\r\n      <S.PostHeader>\r\n        <S.PostTitle>{post.frontmatter.title}</S.PostTitle>\r\n        <S.PostDescription>{`${post.frontmatter.date} â€¢ ${post.timeToRead} min read`}</S.PostDescription>\r\n      </S.PostHeader>\r\n      <S.PostContent>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }}></div>\r\n      </S.PostContent>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query Post($slug: String!) {\r\n    markdownRemark(fields: {slug: {eq: $slug }}) {\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"DD-MM-YYYY\")\r\n      }\r\n      html\r\n      timeToRead\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogPost"],"sourceRoot":""}